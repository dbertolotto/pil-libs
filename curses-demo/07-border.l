(load "../curses.l")

(de border-demo ()
  (let (stdscr (initscr)
        row (getmaxy stdscr)
        col (getmaxx stdscr)
        winp (new '(+Win) row col)
        pair (init_pair 1 cCyan cBlack))
    (start-color)
    (cbreak)
    (noecho)
    (keypad stdscr T)
    (attron (color-pair 1))
    (printw "press q to quit")
    (refresh)
    (attroff (color-pair 1))
    (create-box winp T) 
    (let (ch (cgetch))
      (while (not (= ch "q"))
        (cond
          ((= ch "h")
           (create-box winp NIL)
           (with winp (dec (:: sx)))
           (create-box winp T))
          ((= ch "l") 
           (create-box winp NIL)
           (with winp (inc (:: sx)))
           (create-box winp T))
          ((= ch "k")
           (create-box winp NIL)
           (with winp (dec (:: sy)))
           (create-box winp T))
          ((= ch "j")
           (create-box winp NIL)
           (with winp (inc (:: sy)))
           (create-box winp T)))
        (setq ch (cgetch)))))
  (endwin)
  (bye))

(class +Border)
(dm T ()
  (=: ls (char "|"))
  (=: rs (char "|"))
  (=: ts (char "-"))
  (=: bs (char "-"))
  (=: tl (char "+"))
  (=: tr (char "+"))
  (=: bl (char "+"))
  (=: br (char "+")))

(class +Win +Border)
(dm T (row col)
  (super)
  (=: h 3)
  (=: w 10)
  (=: sy (/ (- row (: h)) 2))
  (=: sx (/ (- col (: w)) 2)))

(de create-box (winp bl)
  (with winp
    (let (x (: sx)
          y (: sy)
          w (: w)
          h (: h))
      (if bl
        (prog
          (mvaddch y x (: tl))
          (mvaddch y (+ x w) (: tr))
          (mvaddch (+ y h) x (: bl))
          (mvaddch (+ y h) (+ x w) (: br))
          (mvhline y (+ x 1) (: ts) (- w 1))
          (mvhline (+ y h) (+ x 1) (: bs) (- w 1))
          (mvvline (+ y 1) x (: ls) (- h 1))
          (mvvline (+ y 1) (+ x w) (: rs) (- h 1)))
        (for (j y (<= j (+ y h)) (inc j))
          (for (i x (<= i (+ x w)) (inc i))
	    (mvaddch j i (char " ")))))))
  (refresh))

(border-demo)
